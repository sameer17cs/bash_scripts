version: '3.9'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    environment:
      - node.name: es01
      - cluster.name: es-docker-cluster
      - bootstrap.memory_lock: true
      - ES_JAVA_OPTS: "-Xms${ELASTIC_MIN_MEMORY}m -Xmx${ELASTIC_MAX_MEMORY}m"
      - discovery.type: single-node
      - xpack.security.enabled: true  # Enable security
      - xpack.security.transport.ssl.enabled: false
      - xpack.security.http.ssl.enabled: false
      - ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}  # Set the password for the elastic user
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ${ELASTIC_DATA_PATH}:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s -k https://localhost:9200/_cluster/health | grep '\"status\":\"green\"'"]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      - ELASTICSEARCH_USERNAME: kibana_system  # Kibana user for secured Elasticsearch
      - ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD}  # Password for the Kibana user
    volumes:
      - ${KIBANA_DATA_PATH}:/usr/share/kibana/data
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    container_name: logstash
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      - elk
    environment:
      - xpack.monitoring.elasticsearch.username: logstash_system
      - xpack.monitoring.elasticsearch.password: ${LOGSTASH_PASSWORD}  # Password for the Logstash user

networks:
  elk:
    driver: bridge
